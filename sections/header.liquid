
{%liquid
   assign menu = section.settings.menu
   assign header_menu_links = linklists[menu].links

 %}



<header
  style="background-color:{{ settings.background_1 }}"
>
  <div class="header_wrapper">      
    <div class="site_logo">
      {% unless settings.site_logo %}
         <h2 class="header__title">
      {{ shop.name | link_to: routes.root_url }}
    </h2>
      {% endunless %}
      <a>
         <img class="site_logo" width="" height=""
          style="width:{{ section.settings.logo_width }}px;"
          src="{{ settings.site_logo | image_url }}" />
        </a>
    </div>
   

    <div style="justify-content:{{ section.settings.menu_position }};" class="header__menu">
      {% if section.settings.menu_type == 'menu' %}
        <ul class="d_header_menu">
         
         {% for link in header_menu_links %}
            <li class=""> 
              <a href="{{ link.url }}"> {{  link.title }} </a>
              {% if link.links.size > 0 %}
                <ul class="child">
                  {% for child_link in link.links %}
                    <li>
                        <a href="{{  child_link.url }}" class="">{{ child_link.title }}</a>  
                        {% if child_link.links.size > 0 %}
                          <ul class="grandchild">
                          {% for grandChild in child_link.links %}
                            <li>
                              <a href="{{ grandChild.url }}" class="">{{ grandChild.title }}</a>  
                            </li>
                          {% endfor %}
                        </ul>
                         <img src="https://cdn.shopify.com/s/files/1/0732/4434/4472/files/right-arrow.png?v=1760706496" 
                           width="10" height="10">
                        {% endif %}
                        
                    </li>
                  {% endfor %}
                </ul>
                {% comment %} has_child {% endcomment %}
                 <img id="d_p_menu_header_right_arrow" src="https://cdn.shopify.com/s/files/1/0732/4434/4472/files/right-arrow.png?v=1760706496" 
                           width="10" height="10">
              {% endif %}
            </li> 
             
          {% endfor %}
        </ul>

      {% else %}
        Mega menu
      {% endif %}
    
    </div>

    <div class="header__icons">
      {% if shop.customer_accounts_enabled %}
        {{ 'icon-account.svg' | inline_asset_content | link_to: routes.account_url }}
      {% endif %}

      <a href="{{ routes.cart_url }}">
        {% if cart.item_count > 0 %}
          <sup>{{ cart.item_count }}</sup>
        {% endif %}

        {{ 'icon-cart.svg' | inline_asset_content }}
      </a>
    </div>
  </div>
</header>

{% stylesheet %}
  header {    
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
  .header_wrapper{
    max-width: 1240px;
    width: 100%;
    padding:0 20px;
    margin:0 auto;
    display: grid;
    grid-template-columns: 1fr 4fr 1fr;
  }

  .header_wrapper .site_logo{
    height: auto;
  }

  .header_wrapper ul {
    list-style: none;
  }

  ul.d_header_menu{
    display: flex;
    list-style: none;
    gap:20px;
    position: relative;
    height: 100%;
    align-items: center;
  }

  ul.d_header_menu li{
    position: relative;
      height: 100%;
      display: flex;
    align-items: center;
    cursor: pointer;
  }

  /* child */
  ul.d_header_menu li ul{  
    position: absolute;    
    left:0;
    top: 100%;
    background-color: var(--background-1);
    z-index: 99;
    height:fit-content;
    min-width: 150px;
    border-top:0px solid #fff; 
    box-shadow: rgba(15, 15, 131, 0.2) 0px 7px 29px 0px;
    opacity: 0;
    z-index: -999;
    /* transition: all 0.3s ease-in-out; */
  }

   ul.d_header_menu li a{
   color: #c5bbbb;
   display: inline-block;
   transition: all 0.3ms ease-in-out;
  }

  ul.d_header_menu li:hover a{
   color: #ffffff;
   display: inline-block;
  }



  ul.d_header_menu li:hover ul{
    opacity: 1;
    z-index: 999;
  } 

  ul.d_header_menu li ul li{
    cursor: pointer;
     position: relative;
     border-bottom: 1px solid white;
     z-index: 99;
    display: flex;
    justify-content: space-between;
    padding: 5px;
    align-items: center;
  }

  ul.d_header_menu li ul li a{
    cursor: pointer;
    padding: 10px;
    display: inline-block;
   
  }

  /* grandchild ul */
  ul.d_header_menu li ul li ul {
    
     position: absolute;
     left:100%;
     top:0;
     z-index: 1;
     display: block;
     height: fit-content;
     min-width: 150px;
     display: none;
    
     box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
  }
/* 
  ul.d_header_menu li ul li ul li {
     color: var(--background-1);
       background-color: azure;
  } */

  header a {
    position: relative;
    text-decoration: none;
    color: #fff;
  }
  header a sup {
    position: absolute;
    left: 100%;
    overflow: hidden;
    max-width: var(--page-margin);
  }
  header svg {
    width: 2rem;
  }
  header .header__menu{
    display: flex;
    align-items: center;
    color:#fff;
  }
  header .header__menu,
  header .header__icons {
    display: flex;
    gap: 1rem;
    align-items: center;
  }
{% endstylesheet %}


<script defer src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.13.0/gsap.min.js"
   integrity="sha512-NcZdtrT77bJr4STcmsGAESr06BYGE8woZdSdEgqnpyqac7sugNO+Tr4bGwGF3MsnEkGKhU2KL2xh6Ec+BqsaHA=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
 document.addEventListener("DOMContentLoaded", () => {
  const menuItems = document.querySelectorAll(".d_header_menu > li");

  menuItems.forEach((item) => {
    const submenu = item.querySelector(":scope > ul");
    {% comment %} console.log(submenu) {% endcomment %}

    if (submenu) {
      // Prepare GSAP initial state
      gsap.set(submenu, { opacity: 0, y: -10, display: "none" });

      item.addEventListener("mouseenter", () => {
        gsap.killTweensOf(submenu); // Stop ongoing animations
        gsap.set(submenu, { display: "block" });
        gsap.to(submenu, {
          opacity: 1,
          y: 0,
          duration: 0.3,
          ease: "power2.out",
        });

        // Stagger animate its child links
        const links = submenu.querySelectorAll("li");
        gsap.fromTo(
          links,
          { opacity: 0, y: -5 },
          {
            opacity: 1,
            y: 0,
            duration: 0.2,
            stagger: 0.05,
            ease: "power1.out",
          }
        );
      });

      item.addEventListener("mouseleave", () => {
        gsap.killTweensOf(submenu);
        gsap.to(submenu, {
          opacity: 0,
          y: -10,
          duration: 0.2,
          ease: "power2.in",
          onComplete: () => gsap.set(submenu, { display: "none" }),
        });
      });
    }

    // Handle grandchild submenu hover
    console.log({item});
    const grandChildMenus = item.querySelectorAll("ul");
    console.log(grandChildMenus)
    grandChildMenus.forEach((gc) => {
      gsap.set(gc, { opacity: 0, x: -10, display: "none" });

      const parentLi = gc.closest("li");
      parentLi.addEventListener("mouseenter", () => {
        gsap.set(gc, { display: "block" });
        gsap.to(gc, {
          opacity: 1,
          x: 0,
          duration: 0.25,
          ease: "power2.out",
        });
      });

      parentLi.addEventListener("mouseleave", () => {
        gsap.to(gc, {
          opacity: 0,
          x: -10,
          duration: 0.2,
          ease: "power2.in",
          onComplete: () => gsap.set(gc, { display: "none" }),
        });
      });
    });
  });
});

</script>


{% schema %}
{
  "name": "header",
  "settings": [
    {
      "type": "range",
      "default":100,
      "min": 100,
      "max": 200,
      "step": 2,
      "label": "Logo Widht",
      "id": "logo_width"
    },
    {
      "type": "select",
      "id": "menu_type",
      "label": "Menu type",
      "options": [
        { "label": "Menu", "value": "menu" },
        { "label": "Mega menu", "value": "mega" }
      ]
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "t:labels.menu",
      "visible_if": "{{ section.settings.menu_type == 'menu' }}"
    },
    {
      "type": "header",
      "content": "Mega menu has to build by adding blocks",
      "visible_if": "{{ section.settings.menu_type == 'mega' }}"
    },
    {
      "type": "select",
      "label": "Menu position",
      "id": "menu_position",
      "options": [
        {
          "label": "Left",
          "value": "flex-start"
        },
        {
          "label": "Center",
          "value": "center"
        },
        {
          "label": "Right",
          "value": "flex-end"
        }
      ],
      "default":"center"
    }
  ]
}
{% endschema %}
